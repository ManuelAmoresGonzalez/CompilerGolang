//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:/ProyectoCompiladores/Grammar\MiniGoParser.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Generated {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MiniGoParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface IMiniGoParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>main</c>
	/// labeled alternative in <see cref="MiniGoParser.root"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMain([NotNull] MiniGoParser.MainContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>estructuraProyecto</c>
	/// labeled alternative in <see cref="MiniGoParser.topDeclarationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEstructuraProyecto([NotNull] MiniGoParser.EstructuraProyectoContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>variableDeclFormal</c>
	/// labeled alternative in <see cref="MiniGoParser.variableDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclFormal([NotNull] MiniGoParser.VariableDeclFormalContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>variableDeclCombinada</c>
	/// labeled alternative in <see cref="MiniGoParser.variableDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclCombinada([NotNull] MiniGoParser.VariableDeclCombinadaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>variableDeclVacia</c>
	/// labeled alternative in <see cref="MiniGoParser.variableDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclVacia([NotNull] MiniGoParser.VariableDeclVaciaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>declararVariablesInternas</c>
	/// labeled alternative in <see cref="MiniGoParser.innerVarDecls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclararVariablesInternas([NotNull] MiniGoParser.DeclararVariablesInternasContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>singleVarDeclAsign</c>
	/// labeled alternative in <see cref="MiniGoParser.singleVarDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingleVarDeclAsign([NotNull] MiniGoParser.SingleVarDeclAsignContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>singleVarDeclAsignExpL</c>
	/// labeled alternative in <see cref="MiniGoParser.singleVarDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingleVarDeclAsignExpL([NotNull] MiniGoParser.SingleVarDeclAsignExpLContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>singleVarDeclNull</c>
	/// labeled alternative in <see cref="MiniGoParser.singleVarDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingleVarDeclNull([NotNull] MiniGoParser.SingleVarDeclNullContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>asignarVariableSinValor</c>
	/// labeled alternative in <see cref="MiniGoParser.singleVarDeclNoExps"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAsignarVariableSinValor([NotNull] MiniGoParser.AsignarVariableSinValorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeDeclUnico</c>
	/// labeled alternative in <see cref="MiniGoParser.typeDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeDeclUnico([NotNull] MiniGoParser.TypeDeclUnicoContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeDeclVarios</c>
	/// labeled alternative in <see cref="MiniGoParser.typeDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeDeclVarios([NotNull] MiniGoParser.TypeDeclVariosContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeDeclVacio</c>
	/// labeled alternative in <see cref="MiniGoParser.typeDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeDeclVacio([NotNull] MiniGoParser.TypeDeclVacioContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>declaracionInterna</c>
	/// labeled alternative in <see cref="MiniGoParser.innerTypeDecls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionInterna([NotNull] MiniGoParser.DeclaracionInternaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>identificadorTipo</c>
	/// labeled alternative in <see cref="MiniGoParser.singleTypeDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentificadorTipo([NotNull] MiniGoParser.IdentificadorTipoContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>estructuraFuncion</c>
	/// labeled alternative in <see cref="MiniGoParser.funcDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEstructuraFuncion([NotNull] MiniGoParser.EstructuraFuncionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>declararFuncion</c>
	/// labeled alternative in <see cref="MiniGoParser.funcFrontDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclararFuncion([NotNull] MiniGoParser.DeclararFuncionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parametrosFuncion</c>
	/// labeled alternative in <see cref="MiniGoParser.funcArgDecls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParametrosFuncion([NotNull] MiniGoParser.ParametrosFuncionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>declTypeParentesis</c>
	/// labeled alternative in <see cref="MiniGoParser.declType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclTypeParentesis([NotNull] MiniGoParser.DeclTypeParentesisContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>declTypeIdentificador</c>
	/// labeled alternative in <see cref="MiniGoParser.declType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclTypeIdentificador([NotNull] MiniGoParser.DeclTypeIdentificadorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>declTypeDeclaracionSimple</c>
	/// labeled alternative in <see cref="MiniGoParser.declType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclTypeDeclaracionSimple([NotNull] MiniGoParser.DeclTypeDeclaracionSimpleContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>declTypeDeclaracionArreglo</c>
	/// labeled alternative in <see cref="MiniGoParser.declType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclTypeDeclaracionArreglo([NotNull] MiniGoParser.DeclTypeDeclaracionArregloContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>declTypeEstructuraDecTipo</c>
	/// labeled alternative in <see cref="MiniGoParser.declType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclTypeEstructuraDecTipo([NotNull] MiniGoParser.DeclTypeEstructuraDecTipoContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>declaracionVacia</c>
	/// labeled alternative in <see cref="MiniGoParser.sliceDeclType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionVacia([NotNull] MiniGoParser.DeclaracionVaciaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>declaracionInt</c>
	/// labeled alternative in <see cref="MiniGoParser.arrayDeclType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionInt([NotNull] MiniGoParser.DeclaracionIntContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>estructuraLlaves</c>
	/// labeled alternative in <see cref="MiniGoParser.structDeclType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEstructuraLlaves([NotNull] MiniGoParser.EstructuraLlavesContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>partesCodigo</c>
	/// labeled alternative in <see cref="MiniGoParser.structMemDecls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPartesCodigo([NotNull] MiniGoParser.PartesCodigoContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>listarIdentificadores</c>
	/// labeled alternative in <see cref="MiniGoParser.identifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitListarIdentificadores([NotNull] MiniGoParser.ListarIdentificadoresContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionMenorIgual</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionMenorIgual([NotNull] MiniGoParser.ExpressionMenorIgualContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionAsterisco</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionAsterisco([NotNull] MiniGoParser.ExpressionAsteriscoContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionCorrimientoDerecha</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionCorrimientoDerecha([NotNull] MiniGoParser.ExpressionCorrimientoDerechaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionLand</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionLand([NotNull] MiniGoParser.ExpressionLandContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionMayorIgual</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionMayorIgual([NotNull] MiniGoParser.ExpressionMayorIgualContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpression([NotNull] MiniGoParser.NotExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionMayor</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionMayor([NotNull] MiniGoParser.ExpressionMayorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionEqual</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionEqual([NotNull] MiniGoParser.ExpressionEqualContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionMas</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionMas([NotNull] MiniGoParser.ExpressionMasContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionSlash</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionSlash([NotNull] MiniGoParser.ExpressionSlashContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionDisyuncionExclusi</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionDisyuncionExclusi([NotNull] MiniGoParser.ExpressionDisyuncionExclusiContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>masExpression</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMasExpression([NotNull] MiniGoParser.MasExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionAndNOt</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionAndNOt([NotNull] MiniGoParser.ExpressionAndNOtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionPrimaryExpression</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionPrimaryExpression([NotNull] MiniGoParser.ExpressionPrimaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionAnd</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionAnd([NotNull] MiniGoParser.ExpressionAndContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionCorrimientoIzqui</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionCorrimientoIzqui([NotNull] MiniGoParser.ExpressionCorrimientoIzquiContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionNotEqual</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionNotEqual([NotNull] MiniGoParser.ExpressionNotEqualContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>menosExpression</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMenosExpression([NotNull] MiniGoParser.MenosExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>disyuncionExpression</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDisyuncionExpression([NotNull] MiniGoParser.DisyuncionExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionPorcentaje</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionPorcentaje([NotNull] MiniGoParser.ExpressionPorcentajeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionOr</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionOr([NotNull] MiniGoParser.ExpressionOrContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionMenor</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionMenor([NotNull] MiniGoParser.ExpressionMenorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionMenos</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionMenos([NotNull] MiniGoParser.ExpressionMenosContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionLor</c>
	/// labeled alternative in <see cref="MiniGoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionLor([NotNull] MiniGoParser.ExpressionLorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionListExpression</c>
	/// labeled alternative in <see cref="MiniGoParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionListExpression([NotNull] MiniGoParser.ExpressionListExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>primaryExpressionSelector</c>
	/// labeled alternative in <see cref="MiniGoParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryExpressionSelector([NotNull] MiniGoParser.PrimaryExpressionSelectorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>primaryExpressionCap</c>
	/// labeled alternative in <see cref="MiniGoParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryExpressionCap([NotNull] MiniGoParser.PrimaryExpressionCapContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>primaryExpressionOperand</c>
	/// labeled alternative in <see cref="MiniGoParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryExpressionOperand([NotNull] MiniGoParser.PrimaryExpressionOperandContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>primaryExpressionAppend</c>
	/// labeled alternative in <see cref="MiniGoParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryExpressionAppend([NotNull] MiniGoParser.PrimaryExpressionAppendContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>primaryExpressionArguments</c>
	/// labeled alternative in <see cref="MiniGoParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryExpressionArguments([NotNull] MiniGoParser.PrimaryExpressionArgumentsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>primaryExpressionIndex</c>
	/// labeled alternative in <see cref="MiniGoParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryExpressionIndex([NotNull] MiniGoParser.PrimaryExpressionIndexContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>primaryExpressionLenght</c>
	/// labeled alternative in <see cref="MiniGoParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryExpressionLenght([NotNull] MiniGoParser.PrimaryExpressionLenghtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>operandoLiteral</c>
	/// labeled alternative in <see cref="MiniGoParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperandoLiteral([NotNull] MiniGoParser.OperandoLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>operandoIdentificador</c>
	/// labeled alternative in <see cref="MiniGoParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperandoIdentificador([NotNull] MiniGoParser.OperandoIdentificadorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>operandoExpresion</c>
	/// labeled alternative in <see cref="MiniGoParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperandoExpresion([NotNull] MiniGoParser.OperandoExpresionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>literalLit</c>
	/// labeled alternative in <see cref="MiniGoParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralLit([NotNull] MiniGoParser.LiteralLitContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>literalFloat</c>
	/// labeled alternative in <see cref="MiniGoParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralFloat([NotNull] MiniGoParser.LiteralFloatContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>literalRune</c>
	/// labeled alternative in <see cref="MiniGoParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralRune([NotNull] MiniGoParser.LiteralRuneContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>literalRaw</c>
	/// labeled alternative in <see cref="MiniGoParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralRaw([NotNull] MiniGoParser.LiteralRawContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>literalInterpreted</c>
	/// labeled alternative in <see cref="MiniGoParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralInterpreted([NotNull] MiniGoParser.LiteralInterpretedContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>indexTipo</c>
	/// labeled alternative in <see cref="MiniGoParser.index"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexTipo([NotNull] MiniGoParser.IndexTipoContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>argumentos</c>
	/// labeled alternative in <see cref="MiniGoParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgumentos([NotNull] MiniGoParser.ArgumentosContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>selectorPunto</c>
	/// labeled alternative in <see cref="MiniGoParser.selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelectorPunto([NotNull] MiniGoParser.SelectorPuntoContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expresionAppend</c>
	/// labeled alternative in <see cref="MiniGoParser.appendExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpresionAppend([NotNull] MiniGoParser.ExpresionAppendContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expresionLen</c>
	/// labeled alternative in <see cref="MiniGoParser.lengthExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpresionLen([NotNull] MiniGoParser.ExpresionLenContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expresionCap</c>
	/// labeled alternative in <see cref="MiniGoParser.capExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpresionCap([NotNull] MiniGoParser.ExpresionCapContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>listaDeclaraciones</c>
	/// labeled alternative in <see cref="MiniGoParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitListaDeclaraciones([NotNull] MiniGoParser.ListaDeclaracionesContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>estructuraBlock</c>
	/// labeled alternative in <see cref="MiniGoParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEstructuraBlock([NotNull] MiniGoParser.EstructuraBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>funcionImprimir</c>
	/// labeled alternative in <see cref="MiniGoParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncionImprimir([NotNull] MiniGoParser.FuncionImprimirContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>funcionImprimirLn</c>
	/// labeled alternative in <see cref="MiniGoParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncionImprimirLn([NotNull] MiniGoParser.FuncionImprimirLnContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>funcionRetornar</c>
	/// labeled alternative in <see cref="MiniGoParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncionRetornar([NotNull] MiniGoParser.FuncionRetornarContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>funcionBreak</c>
	/// labeled alternative in <see cref="MiniGoParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncionBreak([NotNull] MiniGoParser.FuncionBreakContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>funcionContinuar</c>
	/// labeled alternative in <see cref="MiniGoParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncionContinuar([NotNull] MiniGoParser.FuncionContinuarContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expresionSimple</c>
	/// labeled alternative in <see cref="MiniGoParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpresionSimple([NotNull] MiniGoParser.ExpresionSimpleContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>funcionBlock</c>
	/// labeled alternative in <see cref="MiniGoParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncionBlock([NotNull] MiniGoParser.FuncionBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>funcionSwitch</c>
	/// labeled alternative in <see cref="MiniGoParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncionSwitch([NotNull] MiniGoParser.FuncionSwitchContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>funcionIf</c>
	/// labeled alternative in <see cref="MiniGoParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncionIf([NotNull] MiniGoParser.FuncionIfContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>funcionLoop</c>
	/// labeled alternative in <see cref="MiniGoParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncionLoop([NotNull] MiniGoParser.FuncionLoopContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>declararTipos</c>
	/// labeled alternative in <see cref="MiniGoParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclararTipos([NotNull] MiniGoParser.DeclararTiposContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>declararVariables</c>
	/// labeled alternative in <see cref="MiniGoParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclararVariables([NotNull] MiniGoParser.DeclararVariablesContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>funcionEpsilon1</c>
	/// labeled alternative in <see cref="MiniGoParser.simpleStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncionEpsilon1([NotNull] MiniGoParser.FuncionEpsilon1Context context);
	/// <summary>
	/// Visit a parse tree produced by the <c>decrementoIncremento</c>
	/// labeled alternative in <see cref="MiniGoParser.simpleStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecrementoIncremento([NotNull] MiniGoParser.DecrementoIncrementoContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>declararAsignacion</c>
	/// labeled alternative in <see cref="MiniGoParser.simpleStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclararAsignacion([NotNull] MiniGoParser.DeclararAsignacionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>sentenciaDefinir</c>
	/// labeled alternative in <see cref="MiniGoParser.simpleStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSentenciaDefinir([NotNull] MiniGoParser.SentenciaDefinirContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>primerAsignacion</c>
	/// labeled alternative in <see cref="MiniGoParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimerAsignacion([NotNull] MiniGoParser.PrimerAsignacionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>segundaAsignacion</c>
	/// labeled alternative in <see cref="MiniGoParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSegundaAsignacion([NotNull] MiniGoParser.SegundaAsignacionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tercerAsignacion</c>
	/// labeled alternative in <see cref="MiniGoParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTercerAsignacion([NotNull] MiniGoParser.TercerAsignacionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>cuartaAsignacion</c>
	/// labeled alternative in <see cref="MiniGoParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCuartaAsignacion([NotNull] MiniGoParser.CuartaAsignacionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>quintaAsignacion</c>
	/// labeled alternative in <see cref="MiniGoParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuintaAsignacion([NotNull] MiniGoParser.QuintaAsignacionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>sextaAsignacion</c>
	/// labeled alternative in <see cref="MiniGoParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSextaAsignacion([NotNull] MiniGoParser.SextaAsignacionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>setimaAsignacion</c>
	/// labeled alternative in <see cref="MiniGoParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetimaAsignacion([NotNull] MiniGoParser.SetimaAsignacionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>octavaAsignacion</c>
	/// labeled alternative in <see cref="MiniGoParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOctavaAsignacion([NotNull] MiniGoParser.OctavaAsignacionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>novenaAsignacion</c>
	/// labeled alternative in <see cref="MiniGoParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNovenaAsignacion([NotNull] MiniGoParser.NovenaAsignacionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>decimaAsignacion</c>
	/// labeled alternative in <see cref="MiniGoParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecimaAsignacion([NotNull] MiniGoParser.DecimaAsignacionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>undecimaAsignacion</c>
	/// labeled alternative in <see cref="MiniGoParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUndecimaAsignacion([NotNull] MiniGoParser.UndecimaAsignacionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>duodecimaAsignacion</c>
	/// labeled alternative in <see cref="MiniGoParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDuodecimaAsignacion([NotNull] MiniGoParser.DuodecimaAsignacionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>primerIf</c>
	/// labeled alternative in <see cref="MiniGoParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimerIf([NotNull] MiniGoParser.PrimerIfContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>segundoIf</c>
	/// labeled alternative in <see cref="MiniGoParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSegundoIf([NotNull] MiniGoParser.SegundoIfContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tercerIf</c>
	/// labeled alternative in <see cref="MiniGoParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTercerIf([NotNull] MiniGoParser.TercerIfContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>cuartoIf</c>
	/// labeled alternative in <see cref="MiniGoParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCuartoIf([NotNull] MiniGoParser.CuartoIfContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>quintoIf</c>
	/// labeled alternative in <see cref="MiniGoParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuintoIf([NotNull] MiniGoParser.QuintoIfContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>sextoIf</c>
	/// labeled alternative in <see cref="MiniGoParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSextoIf([NotNull] MiniGoParser.SextoIfContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>primerFor</c>
	/// labeled alternative in <see cref="MiniGoParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimerFor([NotNull] MiniGoParser.PrimerForContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>segundoFor</c>
	/// labeled alternative in <see cref="MiniGoParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSegundoFor([NotNull] MiniGoParser.SegundoForContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tercerFor</c>
	/// labeled alternative in <see cref="MiniGoParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTercerFor([NotNull] MiniGoParser.TercerForContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>cuartoFor</c>
	/// labeled alternative in <see cref="MiniGoParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCuartoFor([NotNull] MiniGoParser.CuartoForContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>primerSwitch</c>
	/// labeled alternative in <see cref="MiniGoParser.switch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimerSwitch([NotNull] MiniGoParser.PrimerSwitchContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>segundoSwitch</c>
	/// labeled alternative in <see cref="MiniGoParser.switch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSegundoSwitch([NotNull] MiniGoParser.SegundoSwitchContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tecerSwitch</c>
	/// labeled alternative in <see cref="MiniGoParser.switch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTecerSwitch([NotNull] MiniGoParser.TecerSwitchContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>cuartoSwitch</c>
	/// labeled alternative in <see cref="MiniGoParser.switch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCuartoSwitch([NotNull] MiniGoParser.CuartoSwitchContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>funcionEpsilon</c>
	/// labeled alternative in <see cref="MiniGoParser.expressionCaseClauseList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncionEpsilon([NotNull] MiniGoParser.FuncionEpsilonContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expresionCasoClausula</c>
	/// labeled alternative in <see cref="MiniGoParser.expressionCaseClauseList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpresionCasoClausula([NotNull] MiniGoParser.ExpresionCasoClausulaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expresionSwitch</c>
	/// labeled alternative in <see cref="MiniGoParser.expressionCaseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpresionSwitch([NotNull] MiniGoParser.ExpresionSwitchContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expresionCase</c>
	/// labeled alternative in <see cref="MiniGoParser.expressionSwitchCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpresionCase([NotNull] MiniGoParser.ExpresionCaseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expresionDefault</c>
	/// labeled alternative in <see cref="MiniGoParser.expressionSwitchCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpresionDefault([NotNull] MiniGoParser.ExpresionDefaultContext context);
}
} // namespace Generated
